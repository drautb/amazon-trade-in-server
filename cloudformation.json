{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Stands up a single EC2 instance to run the trade-in server.",
  "Parameters": {
    "AccessKeyId": {
      "Type": "String",
      "NoEcho": "true"
    },
    "SecretKeyId": {
      "Type": "String",
      "NoEcho": "true"
    },
    "AssociateTag": {
      "Type": "String"
    },
    "Port": {
      "Type": "Number",
      "Default": "80"
    },
    "InstanceType": {
      "Type": "String",
      "Default": "t2.micro"
    },
    "AMI": {
      "Type": "String",
      "Default": "ami-d05e75b8"
    },
    "KeyPairName": {
      "Type": "String",
      "Default": "drautb-default"
    },
    "VpcId": {
      "Type": "String",
      "Default": "vpc-28072d4d"
    },
    "DefaultSgId": {
      "Type": "String",
      "Default": "sg-41c1e025"
    }
  },
  "Resources": {
    "InstanceSg": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Allow HTTP access to server.",
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "FromPort": "80",
            "ToPort": "80",
            "IpProtocol": "tcp"
          },
          {
            "CidrIp": "0.0.0.0/0",
            "FromPort": "443",
            "ToPort": "443",
            "IpProtocol": "tcp"
          }
        ],
        "VpcId": {
          "Ref": "VpcId"
        }
      }
    },
    "EC2Instance": {
      "Type": "AWS::EC2::Instance",
      "Metadata": {
        "AWS::CloudFormation::Init": {
          "config": {
            "packages": {
              "apt": {
                "daemon": []
              }
            },
            "sources": {
              "/opt/amazon-trade-in-server": "https://github.com/drautb/amazon-trade-in-server/tarball/master"
            },
            "files": {
              "/tmp/install-racket.sh": {
                "source": "http://mirror.racket-lang.org/installers/6.1.1/racket-minimal-6.1.1-x86_64-linux-ubuntu-precise.sh",
                "mode": "000755",
                "owner": "root",
                "group": "root"
              },
              "/opt/aws-config.json": {
                "content": {
                  "Fn::Join": [
                    "",
                    [
                      "{\n  \"AccessKeyId\":\"",
                      {
                        "Ref": "AccessKeyId"
                      },
                      "\",\n  \"SecretKeyId\":\"",
                      {
                        "Ref": "SecretKeyId"
                      },
                      "\",\n  \"AssociateTag\":\"",
                      {
                        "Ref": "AssociateTag"
                      },
                      "\"\n}\n"
                    ]
                  ]
                },
                "mode": "000644",
                "owner": "root",
                "group": "root"
              }
            },
            "commands": {
              "01install-racket": {
                "command": "sudo /tmp/install-racket.sh --unix-style --create-dir"
              },
              "02install-pkgs": {
                "command": "raco pkg install --deps search-auto sha web-server"
              },
              "03start-server": {
                "command": "daemon -i -r --name=amazon-trade-in-server racket /opt/amazon-trade-in-server/server.rkt",
                "env": {
                  "AWS_CONFIG": "/opt/aws-config.json",
                  "LOG_FILE": "/var/log/trade-in-server.log",
                  "PORT": {
                    "Ref": "Port"
                  }
                }
              }
            }
          }
        }
      },
      "Properties": {
        "ImageId": {
          "Ref": "AMI"
        },
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "KeyName": {
          "Ref": "KeyPairName"
        },
        "InstanceInitiatedShutdownBehavior": "stop",
        "SecurityGroupIds": [
          {
            "Ref": "InstanceSg"
          },
          {
            "Ref": "DefaultSgId"
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash -ex\n",
                "apt-get update\n",
                "apt-get -y install python-setuptools\n",
                "wget -P /root https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz",
                "\n",
                "mkdir -p /root/aws-cfn-bootstrap-latest",
                "\n",
                "tar xvfz /root/aws-cfn-bootstrap-latest.tar.gz --strip-components=1 -C /root/aws-cfn-bootstrap-latest",
                "\n",
                "easy_install /root/aws-cfn-bootstrap-latest/",
                "\n",
                "/usr/local/bin/cfn-init -s ",
                {
                  "Ref": "AWS::StackName"
                },
                " -r EC2Instance ",
                " --region ",
                {
                  "Ref": "AWS::Region"
                },
                "\n"
              ]
            ]
          }
        }
      }
    }
  },
  "Outputs": {
    "PublicDnsName": {
      "Value": {
        "Fn::GetAtt": [
          "EC2Instance",
          "PublicDnsName"
        ]
      }
    },
    "PublicIp": {
      "Value": {
        "Fn::GetAtt": [
          "EC2Instance",
          "PublicIp"
        ]
      }
    }
  }
}